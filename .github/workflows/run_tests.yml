name: Run tests

on:
  workflow_dispatch:
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-22.04
    container:
      image: node:20

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 120
          install-dependencies: true

      - run: |
            # Iniciar el servidor del frontend en el puerto 8000
            cd frontend/src
            python3 -m http.server 8000 &
            cd ../..

            # Iniciar el servidor del backend en el puerto 8080 (ejemplo con Flask)
            cd backend
            python3 app.py &
            cd ..

            # Esperar a que ambos servidores se inicien
            sleep 10

            # Verificar que el frontend está activo
            curl http://localhost:8000

            # Verificar que el backend está activo
            curl http://localhost:8080

            # Ejecutar los tests (en este ejemplo se asume que están en frontend/tests)
            cd frontend/tests
            npm install
            ./node_modules/.bin/mocha *.js       

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: screenshots
          path: screenshots/
